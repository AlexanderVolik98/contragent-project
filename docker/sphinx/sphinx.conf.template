source company_src
{
    type            = pgsql
    sql_host        = postgres
    sql_port        = 5432
    sql_user        = ${POSTGRES_USER}
    sql_pass        = ${POSTGRES_PASSWORD}
    sql_db          = ${POSTGRES_DB}

    sql_query = \
SELECT \
  c.id, \
  c.name            AS name, \
  c.name            AS name_field, \
  c.inn             AS inn_field, \
  c.inn             AS inn, \
  c.ogrn            AS ogrn_field, \
  c.ogrn            AS ogrn, \
  c.kpp             AS kpp_field, \
  c.kpp             AS kpp, \
  c.slug            AS slug, \
  cc.value          AS capital_value, \
  'Company'         AS entity_type, \
  ss.status         AS state_status, \
  TO_CHAR(ss.registration_date, 'YYYYMMDD')::BIGINT AS registration_date_int, \
  r.name            AS region_name, \
  opf.abbreviation  AS opf_abbreviation, \
  o.name            AS okved_name, \
  CASE ss.status \
    WHEN 'ACTIVE'       THEN 1 \
    WHEN 'REORGANIZING' THEN 2 \
    WHEN 'LIQUIDATING'  THEN 3 \
    WHEN 'LIQUIDATED'   THEN 4 \
    WHEN 'BANKRUPT'     THEN 5 \
    ELSE 6 \
  END                AS state_status_order \
FROM company c \
LEFT JOIN company_capital   cc ON cc.company_id      = c.id \
LEFT JOIN subject_state     ss ON ss.company_id      = c.id \
LEFT JOIN subject_address   sa ON sa.company_id      = c.id \
LEFT JOIN opf               ON opf.id            = c.opf_id \
LEFT JOIN region            r  ON r.id             = sa.region_id \
LEFT JOIN subject_okved     sok ON sok.company_id    = c.id AND sok.is_primary = true \
LEFT JOIN okved             o  ON o.code           = sok.okved_id
}

index company_idx
{
    source          = company_src
    path            = /var/lib/sphinx/company_idx
    morphology      = stem_ru,stem_en
    min_word_len    = 3
    index_exact_words = 1

    field           = name_field
    field           = inn_field
    field           = ogrn_field
    field           = kpp_field

    attr_string           = name
    attr_string     = region_name
    attr_string     = okved_name
    attr_string     = state_status
    attr_string     = entity_type

    attr_string     = slug
    attr_bigint     = capital_value
    attr_bigint     = registration_date_int
    attr_bigint     = inn
    attr_bigint     = ogrn
    attr_bigint     = kpp
    attr_string     = opf_abbreviation
    attr_uint       = state_status_order

    charset_table   = 0..9, A..Z->a..z, _, a..z, \
                      U+410..U+42F->U+430..U+44F, \
                      U+430..U+44F, \
                      U+401->U+0435, U+451->U+0435, \
                      U+0419, U+0439
    min_prefix_len  = 3
    html_strip      = 1
    expand_keywords = 1
}

source individual_src
{
    type            = pgsql
    sql_host        = postgres
    sql_port        = 5432
    sql_user        = app
    sql_pass        = pgps9812contr!
    sql_db          = app

    sql_query = \
SELECT \
  i.id, \
  (i.surname || ' ' || i.name || COALESCE(' '|| i.patronymic, '')) AS name, \
  (i.surname || ' ' || i.name || COALESCE(' '|| i.patronymic, '')) AS name_field, \
  i.inn             AS inn, \
  i.inn             AS inn_field, \
  i.ogrnip          AS ogrnip, \
  i.ogrnip          AS ogrnip_field, \
  ''                AS kpp, \
  ''                AS ogrn, \
  ''                AS ogrn_field, \
  ''                AS kpp_field, \
  i.slug            AS slug, \
  0                 AS capital_value, \
  'Individual'      AS entity_type, \
  ss.status         AS state_status, \
  TO_CHAR(ss.registration_date, 'YYYYMMDD')::BIGINT AS registration_date_int, \
  r.name            AS region_name, \
  ''                AS opf_abbreviation, \
  o.name            AS okved_name, \
  CASE ss.status \
    WHEN 'ACTIVE'     THEN 1 \
    WHEN 'LIQUIDATED' THEN 2 \
    ELSE 3 \
  END               AS state_status_order \
FROM individual i \
LEFT JOIN subject_state    ss ON ss.individual_id = i.id \
LEFT JOIN subject_address  sa ON sa.individual_id = i.id \
LEFT JOIN region           r  ON r.id          = sa.region_id \
LEFT JOIN subject_okved    sok ON sok.individual_id = i.id AND sok.is_primary = true \
LEFT JOIN okved            o  ON o.code       = sok.okved_id
}

index individual_idx
{
    source          = individual_src
    path            = /var/lib/sphinx/individual_idx
    morphology      = stem_ru,stem_en
    min_word_len    = 3
    index_exact_words = 1

    #
    # 1) Полнотекстовые поля (для MATCH)
    # ищем только по этим полям
    field = name_field
    field = inn_field
    field = ogrn_field
    field = kpp_field
    field = ogrnip_field

    attr_string     = region_name
    attr_string     = okved_name
    attr_string     = state_status
    attr_string     = entity_type

    attr_bigint     = kpp              # пустая строка
    attr_bigint     = ogrn
    attr_string     = slug
    attr_string     = name
    attr_bigint     = capital_value
    attr_bigint     = inn
    attr_bigint     = ogrnip
    attr_bigint     = registration_date_int
    attr_string     = opf_abbreviation # пустая строка
    attr_uint       = state_status_order

    charset_table   = 0..9, A..Z->a..z, _, a..z, \
                      U+410..U+42F->U+430..U+44F, \
                      U+430..U+44F, \
                      U+401->U+0435, U+451->U+0435, \
                      U+0419, U+0439
    min_prefix_len  = 3
    html_strip      = 1
    expand_keywords = 1
}


index all_entities
{
    type            = distributed
    local           = company_idx
    local           = individual_idx
}


searchd
{
    listen           = 9312:mysql41
    listen           = 9315
    log              = /var/lib/sphinx/logs/searchd.log
    query_log        = /var/lib/sphinx/logs/query.log
    binlog_path      = /var/lib/sphinx/binlog
    pid_file         = /var/lib/sphinx/logs/searchd.pid

    read_timeout     = 5
    max_children     = 30
    seamless_rotate  = 1
    preopen_indexes  = 1
    unlink_old       = 1
    workers          = threads
}
